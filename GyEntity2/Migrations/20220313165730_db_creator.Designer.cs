// <auto-generated />
using System;
using GyEntity2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GyEntity2.Migrations
{
    [DbContext(typeof(eticaretDbContext))]
    [Migration("20220313165730_db_creator")]
    partial class db_creator
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GyEntity2.Models.Blood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Bloods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A+"
                        },
                        new
                        {
                            Id = 2,
                            Name = "A-"
                        },
                        new
                        {
                            Id = 3,
                            Name = "B+"
                        },
                        new
                        {
                            Id = 4,
                            Name = "B-"
                        },
                        new
                        {
                            Id = 5,
                            Name = "AB+"
                        },
                        new
                        {
                            Id = 6,
                            Name = "AB-"
                        },
                        new
                        {
                            Id = 7,
                            Name = "0+"
                        },
                        new
                        {
                            Id = 8,
                            Name = "0-"
                        });
                });

            modelBuilder.Entity("GyEntity2.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("GyEntity2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Teknoloji"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Moda"
                        });
                });

            modelBuilder.Entity("GyEntity2.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = 2,
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zonguldak"
                        },
                        new
                        {
                            Id = 4,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ankara"
                        });
                });

            modelBuilder.Entity("GyEntity2.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Erkek"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kadın"
                        });
                });

            modelBuilder.Entity("GyEntity2.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GyEntity2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BloodId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BloodId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GenderId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BloodId = 8,
                            CountryId = 1,
                            FullName = "Alparslan Tekkanat",
                            GenderId = 1,
                            Mail = "tekkanatalp@gmail.com",
                            Name = "Alparslan",
                            Surname = "Tekkanat"
                        },
                        new
                        {
                            Id = 2,
                            BloodId = 4,
                            CountryId = 5,
                            FullName = "Muammer Tekkanat",
                            GenderId = 1,
                            Mail = "tekkanatmuammer@gmail.com",
                            Name = "Muammer",
                            Surname = "Tekkanat"
                        },
                        new
                        {
                            Id = 3,
                            BloodId = 2,
                            CountryId = 3,
                            FullName = "Gizem Kübra Yaman",
                            GenderId = 2,
                            Mail = "gizemyaman@gmail.com",
                            Name = "Gizem Kübra",
                            Surname = "Yaman"
                        });
                });

            modelBuilder.Entity("GyEntity2.Models.Cart", b =>
                {
                    b.HasOne("GyEntity2.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GyEntity2.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GyEntity2.Models.Product", b =>
                {
                    b.HasOne("GyEntity2.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("GyEntity2.Models.User", b =>
                {
                    b.HasOne("GyEntity2.Models.Blood", "Blood")
                        .WithMany()
                        .HasForeignKey("BloodId");

                    b.HasOne("GyEntity2.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("GyEntity2.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");
                });
#pragma warning restore 612, 618
        }
    }
}
